// <auto-generated />
using System;
using ChatBot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ChatBot.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200117210253_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ChatBot.Data.Entities.ViberUserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Avatart")
                        .HasColumnName("avatar");

                    b.Property<string>("Country")
                        .HasColumnName("country");

                    b.Property<long>("CreatedTimestamp")
                        .HasColumnName("created_timestamp");

                    b.Property<bool>("IsSubscribed")
                        .HasColumnName("is_subscribed");

                    b.Property<string>("Language")
                        .HasColumnName("language");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<long>("UpdatedTimestamp")
                        .HasColumnName("updated_timestamp");

                    b.Property<string>("ViberId")
                        .HasColumnName("viber_id");

                    b.HasKey("Id");

                    b.ToTable("viber_users");
                });

            modelBuilder.Entity("ChatBot.Data.Entities.ViberUserMessageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Message")
                        .HasColumnName("message");

                    b.Property<string>("MessageType")
                        .HasColumnName("message_type");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("viber_user_messages");
                });

            modelBuilder.Entity("ChatBot.Data.Entities.ViberUserMessageEntity", b =>
                {
                    b.HasOne("ChatBot.Data.Entities.ViberUserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
